// Generated by https://quicktype.io

export interface ChatGet {
	username: string;
	message:  string;
}

// Generated by https://quicktype.io

export interface PathStatus {
	x:       number;
	y:       number;
	z:       number;
	rangeSq: number;
}

// Generated by https://quicktype.io

export interface Inventory {
	_events:              Events;
	_eventsCount:         number;
	id:                   number;
	type:                 string;
	title:                string;
	slots:                Array<Slot | null>;
	inventoryStart:       number;
	inventoryEnd:         number;
	hotbarStart:          number;
	craftingResultSlot:   number;
	requiresConfirmation: boolean;
	selectedItem:         null;
}

export interface Events {
}

export interface Slot {
	type:        number;
	count:       number;
	metadata:    number;
	nbt:         null;
	name:        string;
	displayName: string;
	stackSize:   number;
	slot:        number;
}

// Generated by https://quicktype.io

export interface Entities {
	_events:                 Events;
	_eventsCount:            number;
	id:                      number;
	type:                    EntitiesType;
	position:                Position;
	velocity:                Position;
	yaw:                     number;
	pitch:                   number;
	onGround:                boolean;
	height:                  number;
	width:                   number;
	effects:                 Events;
	equipment:               Array<HeldItem | null>;
	isValid:                 boolean;
	metadata:                Array<boolean | MetadataEntitiesClass | number | null>;
	uuid?:                   string;
	mobType?:                string;
	objectType?:             string;
	displayName?:            string;
	entityType?:             number;
	name:                    string;
	kind?:                   string;
	headPitch?:              number;
	attributes?:             Attributes;
	headYaw?:                number;
	objectData?:             number;
	heldItem?:               HeldItem | null;
	username?:               string;
	timeSinceOnGround?:      number;
	isInWater?:              boolean;
	isInLava?:               boolean;
	isCollidedHorizontally?: boolean;
	isCollidedVertically?:   boolean;
}

export interface Events {
}

export interface Attributes {
	"minecraft:generic.movement_speed": MinecraftGenericMovementSpeed;
}

export interface MinecraftGenericMovementSpeed {
	value:     number;
	modifiers: any[];
}

export interface HeldItem {
	type:        number;
	count:       number;
	metadata:    number;
	nbt:         Nbt;
	name:        string;
	displayName: string;
	stackSize:   number;
}
export interface Nbt {
	type:  string;
	name:  string;
	value: Value;
}
export interface Value {
	Damage: Damage;
}

export interface Damage {
	type:  string;
	value: number;
}

export interface MetadataEntitiesClass {
	present?:            boolean;
	itemId?:             number;
	itemCount?:          number;
	type?:               string;
	name?:               string;
	value?:              Events;
	villagerType?:       number;
	villagerProfession?: number;
	level?:              number;
}

export enum EntitiesType {
	Mob = "mob",
	Object = "object",
	Player = "player",
}

// Generated by https://quicktype.io

export interface Players {
	[name: string]: Player;
}

export interface Player {
	username:    string;
	ping:        number;
	uuid:        string;
	displayName: DisplayName;
	entity:      PlayerEntity;
	gamemode:    number;
}

export interface DisplayName {
	json:  DisplayNameJSON;
	text:  string;
	extra: Extra[];
}

export interface Extra {
	json: JSONElement;
	text: string;
}

export interface JSONElement {
	text: string;
}

export interface DisplayNameJSON {
	text:  string;
	extra: JSONElement[];
}

export interface PlayerEntity {
	_events:                Events;
	_eventsCount:           number;
	id:                     number;
	type:                   string;
	position:               Position;
	velocity:               Position;
	yaw:                    number;
	pitch:                  number;
	onGround:               boolean;
	height:                 number;
	width:                  number;
	effects:                Events;
	equipment:              null[];
	heldItem:               null;
	isValid:                boolean;
	metadata:               Array<boolean | MetadataPlayerClass | number | null>;
	username:               string;
	name:                   string;
	timeSinceOnGround:      number;
	isInWater:              boolean;
	isInLava:               boolean;
	isCollidedHorizontally: boolean;
	isCollidedVertically:   boolean;
	attributes:             Attributes;
}

export interface Events {
}

export interface Attributes {
	"minecraft:generic.movement_speed": MinecraftGenericMovementSpeed;
}

export interface MinecraftGenericMovementSpeed {
	value:     number;
	modifiers: any[];
}

export interface MetadataPlayerClass {
	type:  string;
	name:  string;
	value: Events;
}

export interface Position {
	x: number;
	y: number;
	z: number;
}

// Generated by https://quicktype.io

export interface Health {
	health:     number;
	food:       number;
	saturation: number;
}

// Generated by https://quicktype.io

export interface BlockAt {
	type:        number;
	metadata:    number;
	light:       number;
	skyLight:    number;
	biome:       Biome;
	position:    Position;
	stateId:     number;
	name:        string;
	hardness:    number;
	displayName: string;
	shapes:      any[];
	boundingBox: string;
	transparent: boolean;
	diggable:    boolean;
	drops:       number[];
}

export interface Biome {
	id:            number;
	name:          string;
	category:      string;
	temperature:   number;
	precipitation: string;
	depth:         number;
	dimension:     string;
	displayName:   string;
	color:         number;
	rainfall:      number;
	child:         number;
}

export interface Position {
	x: number;
	y: number;
	z: number;
}

// Generated by https://quicktype.io

export interface Entity {
	_events:                Events;
	_eventsCount:           number;
	id:                     number;
	type:                   string;
	position:               Position;
	velocity:               Position;
	yaw:                    number;
	pitch:                  number;
	onGround:               boolean;
	height:                 number;
	width:                  number;
	effects:                Effects;
	equipment:              null[];
	heldItem:               HeldItem;
	isValid:                boolean;
	metadata:               Array<boolean | EntityMetaData | number | null>;
	username:               string;
	name:                   string;
	timeSinceOnGround:      number;
	isInWater:              boolean;
	isInLava:               boolean;
	isCollidedHorizontally: boolean;
	isCollidedVertically:   boolean;
	attributes:             Attributes;
}

export interface Events {
}

export interface Attributes {
	"generic.attack_speed":   GenericSpeed;
	"generic.movement_speed": GenericSpeed;
}

export interface GenericSpeed {
	value:     number;
	modifiers: Modifier[];
}

export interface Modifier {
	uuid:      string;
	amount:    number;
	operation: number;
}

export interface Effects {
	[idk: string]: Effect;
}

export interface Effect {
	id:        number;
	amplifier: number;
	duration:  number;
}

export interface HeldItem {
	type:        number;
	count:       number;
	metadata:    number;
	nbt:         Nbt;
	name:        string;
	displayName: string;
	stackSize:   number;
	slot:        number;
}

export interface AttributeModifiers {
	type:  string;
	value: AttributeModifiersValue;
}

export interface AttributeModifiersValue {
	type:  string;
	value: string[];
}

export interface Display {
	type:  string;
	value: DisplayValue;
}

export interface DisplayValue {
	Lore: AttributeModifiers;
	Name: Name;
}

export interface Name {
	type:  string;
	value: string;
}

export interface OverrideMeta {
	type:  string;
	value: number;
}

export interface EntityMetaData {
	type:  string;
	name:  string;
	value: Events;
}

export interface Position {
	x: number;
	y: number;
	z: number;
}
